name: Build and Merge

on:
  pull_request:
    branches:
      - main

jobs:
  build_and_merge:
    name: Build and Merge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Check if the pull request is from main to prod
      - name: Check Pull Request Branches
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "opened" && "${{ github.event.pull_request.base.ref }}" == "prod" && "${{ github.event.pull_request.head.ref }}" == "main" ]]; then
            echo "This is a pull request from main to prod. Proceeding with merge.";
          else
            echo "This pull request is not from main to prod. Skipping the merge step.";
            exit 78; # Exit with a neutral status code to mark the job as successful but skipped.
          fi

      # Merge into main
      - name: Merge into Main
        run: |
          # Perform the merge steps here
            git merge prod && git push origin main
